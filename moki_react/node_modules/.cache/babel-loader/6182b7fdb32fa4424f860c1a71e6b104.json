{"ast":null,"code":"var _jsxFileName = \"/home/aswin/projects/moki/moki_react/src/components/ToggleButton2.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Switch } from '@headlessui/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButton2(props) {\n  _s();\n\n  const [freeze, setFreeze] = useState(props.isFreeze);\n\n  function handleChange() {\n    setFreeze(!freeze);\n    const taskUrl = `${process.env.REACT_APP_API_ADDRESS}/task/status`;\n    const taskFilter = {\n      \"name\": props.task.task.name\n    };\n    const taskUpdate = {\n      \"$set\": {\n        \"freeze\": freeze\n      }\n    };\n    console.log(\"toggle button props\", props);\n    const url = taskUrl;\n    const filter = taskFilter;\n    const update = taskUpdate;\n    axios.post(url, {\n      \"filter\": filter,\n      \"update\": update\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    checked: freeze,\n    onChange: handleChange,\n    className: `${freeze ? 'bg-green-600' : 'bg-gray-700'} relative inline-flex items-center h-5 rounded-full w-10`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sr-only\",\n      children: \"Enable notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${freeze ? 'translate-x-5' : 'translate-x-1'} inline-block w-3.5 h-3.5 transform bg-green-100 rounded-full ease-in-out duration-200`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleButton2, \"zx3imjNlO4uRExzQLPXZ/BFKlHk=\");\n\n_c = ToggleButton2;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButton2\");","map":{"version":3,"sources":["/home/aswin/projects/moki/moki_react/src/components/ToggleButton2.js"],"names":["useState","useEffect","Switch","axios","ToggleButton2","props","freeze","setFreeze","isFreeze","handleChange","taskUrl","process","env","REACT_APP_API_ADDRESS","taskFilter","task","name","taskUpdate","console","log","url","filter","update","post","then","response","catch","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE3C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACK,KAAK,CAACG,QAAP,CAApC;;AAEA,WAASC,YAAT,GAAwB;AACtBF,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AAEA,UAAMI,OAAO,GAAK,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,cAAtD;AAEA,UAAMC,UAAU,GAAG;AACf,cAAOT,KAAK,CAACU,IAAN,CAAWA,IAAX,CAAgBC;AADR,KAAnB;AAKA,UAAMC,UAAU,GAAG;AACf,cAAO;AAAC,kBAASX;AAAV;AADQ,KAAnB;AAGAY,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCd,KAAlC;AAEA,UAAMe,GAAG,GAAIV,OAAb;AACA,UAAMW,MAAM,GAAGP,UAAf;AACA,UAAMQ,MAAM,GAAIL,UAAhB;AAGAd,IAAAA,KAAK,CAACoB,IAAN,CAAWH,GAAX,EAAe;AACX,gBAAUC,MADC;AAEX,gBAAUC;AAFC,KAAf,EAGGE,IAHH,CAGSC,QAAD,IAAY;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACH,KALD,EAKGC,KALH,CAKSC,KAAK,IAAE;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,KAPD;AASD;;AAED,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAErB,MADX;AAEE,IAAA,QAAQ,EAAEG,YAFZ;AAGE,IAAA,SAAS,EAAG,GACVH,MAAM,GAAG,cAAH,GAAoB,aAC3B,0DALH;AAAA,4BAOE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AACE,MAAA,SAAS,EAAG,GACVA,MAAM,GAAG,eAAH,GAAqB,eAC5B;AAHH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnDuBF,a;;KAAAA,a","sourcesContent":["import { useState,useEffect } from 'react'\nimport { Switch } from '@headlessui/react'\nimport axios from 'axios'\n\nexport default function ToggleButton2(props) {\n    \n  const [freeze, setFreeze] = useState(props.isFreeze)\n\n  function handleChange (){\n    setFreeze(!freeze)\n\n    const taskUrl  = `${process.env.REACT_APP_API_ADDRESS}/task/status`\n\n    const taskFilter = {\n        \"name\":props.task.task.name\n    }\n    \n    \n    const taskUpdate = {\n        \"$set\":{\"freeze\":freeze}\n    }\n    console.log(\"toggle button props\",props)\n\n    const url  = taskUrl\n    const filter = taskFilter\n    const update  = taskUpdate\n\n    \n    axios.post(url,{\n        \"filter\": filter,\n        \"update\": update\n    }).then((response)=>{\n        console.log(response)\n    }).catch(error=>{\n        console.log(error)\n    })\n \n  }\n\n  return (\n    <Switch\n      checked={freeze}\n      onChange={handleChange}\n      className={`${\n        freeze ? 'bg-green-600' : 'bg-gray-700'\n      } relative inline-flex items-center h-5 rounded-full w-10`}\n    >\n      <span className=\"sr-only\">Enable notifications</span>\n      <span\n        className={`${\n          freeze ? 'translate-x-5' : 'translate-x-1'\n        } inline-block w-3.5 h-3.5 transform bg-green-100 rounded-full ease-in-out duration-200`}\n      />\n    </Switch>\n  )\n}"]},"metadata":{},"sourceType":"module"}