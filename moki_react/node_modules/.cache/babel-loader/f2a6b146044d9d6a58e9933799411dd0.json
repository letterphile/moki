{"ast":null,"code":"var _jsxFileName = \"/home/aswin/projects/moki/moki_react/src/components/RadioInput.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RadioInput(props) {\n  if (props.value == props.chosen) {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      className: \"form-radio\",\n      name: \"radio\",\n      value: props.value,\n      onClick: () => props.handleChange(props.value),\n      checked: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 1\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      className: \"form-radio\",\n      name: \"radio\",\n      value: props.value,\n      onClick: () => props.handleChange(props.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c = RadioInput;\nexport default RadioInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioInput\");","map":{"version":3,"sources":["/home/aswin/projects/moki/moki_react/src/components/RadioInput.js"],"names":["RadioInput","props","value","chosen","handleChange"],"mappings":";;;AAAA,SAASA,UAAT,CAAoBC,KAApB,EAA0B;AAEtB,MAAGA,KAAK,CAACC,KAAN,IAAaD,KAAK,CAACE,MAAtB,EAA6B;AAG7B,wBAEJ;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,YAA9B;AAA2C,MAAA,IAAI,EAAC,OAAhD;AACA,MAAA,KAAK,EAAEF,KAAK,CAACC,KADb;AACoB,MAAA,OAAO,EAAE,MAAID,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACC,KAAzB,CADjC;AACkE,MAAA,OAAO;AADzE;AAAA;AAAA;AAAA;AAAA,YAFI;AAMC,GATD,MAUI;AACA,wBAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,YAA9B;AAA2C,MAAA,IAAI,EAAC,OAAhD;AACA,MAAA,KAAK,EAAED,KAAK,CAACC,KADb;AACoB,MAAA,OAAO,EAAE,MAAID,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACC,KAAzB;AADjC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAMH;AACJ;;KApBQF,U;AAsBT,eAAeA,UAAf","sourcesContent":["function RadioInput(props){\n    \n    if(props.value==props.chosen){\n    \n    \n    return(\n\n<input type=\"radio\" className=\"form-radio\" name=\"radio\" \nvalue={props.value} onClick={()=>props.handleChange(props.value)} checked/>\n\n    )\n    }\n    else{\n        return(\n\n            <input type=\"radio\" className=\"form-radio\" name=\"radio\" \n            value={props.value} onClick={()=>props.handleChange(props.value)}/>\n            \n                )\n    }\n}\n\nexport default RadioInput;"]},"metadata":{},"sourceType":"module"}