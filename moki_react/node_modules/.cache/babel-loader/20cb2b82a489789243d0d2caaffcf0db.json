{"ast":null,"code":"var _jsxFileName = \"/home/aswin/projects/moki/moki_react/src/components/ToggleButton.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Switch } from '@headlessui/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleButton(props) {\n  _s();\n\n  const [enabled, setEnabled] = useState(props.enableState);\n\n  function handleChange() {\n    setEnabled(!enabled);\n    let incrementValue = enabled ? -1 : 1;\n    const ltd_hours = props.task.task.least_time_division / 60;\n    let hours_left = enabled ? ltd_hours * -1 : ltd_hours;\n    const taskUrl = `${process.env.REACT_APP_API_ADDRESS}/task/status`;\n    const fixedTaskUrl = `${process.env.REACT_APP_API_ADDRESS}/fixed_task/status`;\n    const taskFilter = {\n      \"name\": props.task.task.name\n    };\n    const fixedTaskFilter = {\n      \"task.name\": props.task.task.name\n    };\n    const fixedTaskUpdate = {\n      \"$inc\": {\n        \"task.session_done\": incrementValue\n      }\n    };\n    const taskUpdate = {\n      \"$inc\": {\n        session_done: incrementValue,\n        hours_done: ltd_hours,\n        hours_left: ltd_hours * -1\n      }\n    };\n    console.log(\"toggle button props\", props);\n    const url = props.task.task.fixed ? fixedTaskUrl : taskUrl;\n    const filter = props.task.task.fixed ? fixedTaskFilter : taskFilter;\n    const update = props.task.task.fixed ? fixedTaskUpdate : taskUpdate;\n    axios.post(url, {\n      \"filter\": filter,\n      \"update\": update\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    checked: enabled,\n    onChange: handleChange,\n    className: `${enabled ? 'bg-green-600' : 'bg-gray-700'} relative inline-flex items-center h-5 rounded-full w-10`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sr-only\",\n      children: \"Enable notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${enabled ? 'translate-x-5' : 'translate-x-1'} inline-block w-3.5 h-3.5 transform bg-green-100 rounded-full ease-in-out duration-200`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleButton, \"+0xjsCvL+x00AOC0ce2CyF1GzYY=\");\n\n_c = ToggleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleButton\");","map":{"version":3,"sources":["/home/aswin/projects/moki/moki_react/src/components/ToggleButton.js"],"names":["useState","useEffect","Switch","axios","ToggleButton","props","enabled","setEnabled","enableState","handleChange","incrementValue","ltd_hours","task","least_time_division","hours_left","taskUrl","process","env","REACT_APP_API_ADDRESS","fixedTaskUrl","taskFilter","name","fixedTaskFilter","fixedTaskUpdate","taskUpdate","session_done","hours_done","console","log","url","fixed","filter","update","post","then","response","catch","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAE1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACK,KAAK,CAACG,WAAP,CAAtC;;AAEA,WAASC,YAAT,GAAwB;AACtBF,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACA,QAAII,cAAc,GAAGJ,OAAO,GAAG,CAAC,CAAJ,GAAQ,CAApC;AACA,UAAMK,SAAS,GAAGN,KAAK,CAACO,IAAN,CAAWA,IAAX,CAAgBC,mBAAhB,GAAoC,EAAtD;AACA,QAAIC,UAAU,GAAGR,OAAO,GAAGK,SAAS,GAAE,CAAC,CAAf,GAAkBA,SAA1C;AACA,UAAMI,OAAO,GAAK,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,cAAtD;AACA,UAAMC,YAAY,GAAI,GAAEH,OAAO,CAACC,GAAR,CAAYC,qBAAsB,oBAA1D;AACA,UAAME,UAAU,GAAG;AACf,cAAOf,KAAK,CAACO,IAAN,CAAWA,IAAX,CAAgBS;AADR,KAAnB;AAGA,UAAMC,eAAe,GAAG;AACpB,mBAAYjB,KAAK,CAACO,IAAN,CAAWA,IAAX,CAAgBS;AADR,KAAxB;AAGA,UAAME,eAAe,GAAG;AACpB,cAAO;AAAC,6BAAqBb;AAAtB;AADa,KAAxB;AAIA,UAAMc,UAAU,GAAG;AACf,cAAO;AAACC,QAAAA,YAAY,EAACf,cAAd;AAA6BgB,QAAAA,UAAU,EAACf,SAAxC;AAAkDG,QAAAA,UAAU,EAACH,SAAS,GAAE,CAAC;AAAzE;AADQ,KAAnB;AAGAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCvB,KAAlC;AACA,UAAMwB,GAAG,GAAIxB,KAAK,CAACO,IAAN,CAAWA,IAAX,CAAgBkB,KAAhB,GAAwBX,YAAxB,GAAuCJ,OAApD;AACA,UAAMgB,MAAM,GAAG1B,KAAK,CAACO,IAAN,CAAWA,IAAX,CAAgBkB,KAAhB,GAAwBR,eAAxB,GAAyCF,UAAxD;AACA,UAAMY,MAAM,GAAI3B,KAAK,CAACO,IAAN,CAAWA,IAAX,CAAgBkB,KAAhB,GAAwBP,eAAxB,GAAyCC,UAAzD;AACArB,IAAAA,KAAK,CAAC8B,IAAN,CAAWJ,GAAX,EAAe;AACX,gBAAUE,MADC;AAEX,gBAAUC;AAFC,KAAf,EAGGE,IAHH,CAGSC,QAAD,IAAY;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACH,KALD,EAKGC,KALH,CAKSC,KAAK,IAAE;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACH,KAPD;AASD;;AAED,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAE/B,OADX;AAEE,IAAA,QAAQ,EAAEG,YAFZ;AAGE,IAAA,SAAS,EAAG,GACVH,OAAO,GAAG,cAAH,GAAoB,aAC5B,0DALH;AAAA,4BAOE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AACE,MAAA,SAAS,EAAG,GACVA,OAAO,GAAG,eAAH,GAAqB,eAC7B;AAHH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAvDuBF,Y;;KAAAA,Y","sourcesContent":["import { useState,useEffect } from 'react'\nimport { Switch } from '@headlessui/react'\nimport axios from 'axios'\n\nexport default function ToggleButton(props) {\n    \n  const [enabled, setEnabled] = useState(props.enableState)\n\n  function handleChange (){\n    setEnabled(!enabled)\n    let incrementValue = enabled ? -1 : 1\n    const ltd_hours = props.task.task.least_time_division/60\n    let hours_left = enabled ? ltd_hours*(-1):ltd_hours\n    const taskUrl  = `${process.env.REACT_APP_API_ADDRESS}/task/status`\n    const fixedTaskUrl = `${process.env.REACT_APP_API_ADDRESS}/fixed_task/status`\n    const taskFilter = {\n        \"name\":props.task.task.name\n    }\n    const fixedTaskFilter = {\n        \"task.name\":props.task.task.name\n    }\n    const fixedTaskUpdate = {\n        \"$inc\":{\"task.session_done\": incrementValue}\n    }\n    \n    const taskUpdate = {\n        \"$inc\":{session_done:incrementValue,hours_done:ltd_hours,hours_left:ltd_hours*(-1)}\n    }\n    console.log(\"toggle button props\",props)\n    const url  = props.task.task.fixed ? fixedTaskUrl : taskUrl\n    const filter = props.task.task.fixed ? fixedTaskFilter: taskFilter\n    const update  = props.task.task.fixed ? fixedTaskUpdate: taskUpdate\n    axios.post(url,{\n        \"filter\": filter,\n        \"update\": update\n    }).then((response)=>{\n        console.log(response)\n    }).catch(error=>{\n        console.log(error)\n    })\n \n  }\n\n  return (\n    <Switch\n      checked={enabled}\n      onChange={handleChange}\n      className={`${\n        enabled ? 'bg-green-600' : 'bg-gray-700'\n      } relative inline-flex items-center h-5 rounded-full w-10`}\n    >\n      <span className=\"sr-only\">Enable notifications</span>\n      <span\n        className={`${\n          enabled ? 'translate-x-5' : 'translate-x-1'\n        } inline-block w-3.5 h-3.5 transform bg-green-100 rounded-full ease-in-out duration-200`}\n      />\n    </Switch>\n  )\n}"]},"metadata":{},"sourceType":"module"}