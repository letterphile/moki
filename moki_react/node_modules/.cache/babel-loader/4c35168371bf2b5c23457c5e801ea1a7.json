{"ast":null,"code":"var _jsxFileName = \"/home/aswin/projects/moki/moki_react/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport ToggleButton2 from './ToggleButton2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(props) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [frozenTasks, setFrozenTasks] = useState([]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_ADDRESS}/schedule/task`).then(response => {\n      setTasks(response.data.info);\n      setFrozenTasks(response.data.frozenTasks);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n  console.log(\"tasks\", tasks);\n  console.log(\"frozenTasks\", frozenTasks);\n  props.changePage(\"tasks\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-6 grid place-items-center \",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-fixed max-w-4xl  bg-green-100 shadow-lg rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"w-1/4 ...\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"w-1/4 ...\",\n            children: \"Completion Projection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"w-1/4 ...\",\n            children: \"Froze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [tasks.map(s => {\n          console.log(s.task);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-left\",\n              children: s.task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: new Date(s.time).toUTCString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(ToggleButton2, {\n                task: s,\n                isFreeze: s.task.freeze\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this);\n        }), frozenTasks.map(s => {\n          console.log(s.task);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-left\",\n              children: s.task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: new Date(s.time).toUTCString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(ToggleButton2, {\n                task: {\n                  task: s\n                },\n                isFreeze: s.freeze\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tasks, \"Pt/mZEgFOkvKgrfDd2s9I1Di1m4=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/aswin/projects/moki/moki_react/src/components/Tasks.js"],"names":["axios","React","useEffect","useState","ToggleButton2","Tasks","props","tasks","setTasks","frozenTasks","setFrozenTasks","get","process","env","REACT_APP_API_ADDRESS","then","response","data","info","catch","e","console","log","changePage","map","s","task","name","Date","time","toUTCString","freeze"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react';\nimport ToggleButton2 from './ToggleButton2'\n\nfunction Tasks(props){\n    const [tasks,setTasks] = useState([])\n    const [frozenTasks,setFrozenTasks] = useState([])\n    useEffect(()=>{\n        axios.get(`${process.env.REACT_APP_API_ADDRESS}/schedule/task`)\n        .then(\n            (response=>{\n                setTasks(response.data.info)\n                setFrozenTasks(response.data.frozenTasks)\n                \n            })\n        ).catch((e)=>{\n            console.log(e)\n        })\n    },[])\n    \n    console.log(\"tasks\",tasks)\n    console.log(\"frozenTasks\",frozenTasks)\n    props.changePage(\"tasks\")\n    return(\n        <div className=\"pt-6 grid place-items-center \">\n\n        <table className=\"table-fixed max-w-4xl  bg-green-100 shadow-lg rounded-lg\">\n  <thead>\n    <tr>\n      <th className=\"w-1/4 ...\">Task</th>\n      <th className=\"w-1/4 ...\">Completion Projection</th>\n      <th className=\"w-1/4 ...\">Froze</th>\n    </tr>\n  </thead>\n  <tbody>\n    {\n        tasks.map((s)=>{\n            console.log(s.task)\n  \n        return (\n            <tr>\n      {/* <td className=\"text-left \">{new Date(s.time).toUTCString()}</td> */}\n      <td className=\"text-left\">{s.task.name}</td>\n      <td className=\"text-center\">{new Date(s.time).toUTCString()}</td>\n      <td className=\"text-center\"><ToggleButton2 task={s} isFreeze ={s.task.freeze} /></td>\n    </tr> \n        \n        )\n        }\n        )\n\n        \n\n        \n    \n}\n{\n        frozenTasks.map((s)=>{\n            console.log(s.task)\n  \n        return (\n            <tr>\n      {/* <td className=\"text-left \">{new Date(s.time).toUTCString()}</td> */}\n      <td className=\"text-left\">{s.task.name}</td>\n      <td className=\"text-center\">{new Date(s.time).toUTCString()}</td>\n      <td className=\"text-center\"><ToggleButton2 task={{task:s}} isFreeze ={s.freeze} /></td>\n    </tr> \n        \n        )\n        }\n        )\n\n        \n\n        \n    \n}\n  </tbody>\n</table>\n</div>\n    )\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}